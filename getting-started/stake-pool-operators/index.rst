# ステークプールの運営を始める

ステークプールは、ネットワークとのやり取り、トランザクションの送信、ブロックの生成その他を検証するために、Cardanoノードを使用します。

**ステークプールオペレーターとオーナー**

ステークプールの運営にはステークプールオペレーターおよびステークプールオーナーとしての役割が含まれます。この2つの役割には概念的な違いがあることを覚えておいてください。

+ **ステークプールオペレーター**はステークプールの設定および実行に責任を負います。すなわち、サーバーを所有またはレンタルし、ステークプールの鍵を保持し、ノードの実行および監視に責任を負います。ステークプールオペレーターはその鍵を使用して、ブロックに署名し、ステークプールを登録、再登録、終了し、更新した証明書を送信することができます。ステークプールオペレーターは、再登録の際に一部のステークプールオーナーを除外する力も持ちます。
+ **ステークプールオーナー**は、対象プールの報酬獲得力と望ましさを高めるために、そのプールに出資する人物です。オーナーが`ステークを出資`できることにより、シビル攻撃への抵抗力が提供されます。

.. \_ステークを出資: https://docs.cardano.org/en/latest/explore-cardano/understanding-pledging-and-rewards.html

通常、ステークプールオペレーターとオーナーは同一人物ですが、ステークプールは、複数のオーナーを持ち、それぞれのステークを出資してプールのサイズを大きくすることにより、競争力を確保することもできます。このケースでも、ステークプールのプロセスに責任を持つステークプールオペレーターは1人です。

ステークプールオーナーのステークプールオペレーターへの信用は欠かせません。オペレーターおよびオーナーの報酬はすべて1つの共有された報酬アカウントとなるプールの報酬アドレスに支払われ、オーナーアカウント間のプロトコルによって分配されます。これは、このようにしないと誰もがステークプールに委任するよりもその共同オーナーになることを選び、その結果ステークの出資メカニズムが効力を失うためです。

これにより、共有アカウントに蓄積された補修がいつどのように分けられるかの定義に同意する必要があることが、全関係者に明らかとなります。例えば、オペレーターが共有アカウントの管理をすることに同意することもできますし、マルチシグアカウントの利用を選ぶこともできます。

プールを効率よく運営するためには、双方向的な関係および信用が不可欠です。この信用が損なわれると、残りの関係者は蓄積された報酬または潜在的な報酬を失うことにもなり、オペレーターは評判を落とすことにもなります。

*こうしたケースを排除するために、オーターとオペレーターは契約の締結を考慮するのもいいでしょう。*

**ステークプールの運営**

ステークプールは分散型Cardanoの根幹をなし、ネットワークの長期にわたる健全性と活性を確保するメカニズムを支えています。ステークプールオペレーターはステークプールの運営を通じて、他のユーザーが継続的にノードを稼働させる必要なくプロトコルに参加し、報酬を得ることを可能にします。

.. toctree:: :maxdepth: 1 :titlesonly:

prerequisites hardware-requirements stake-pool-performance stake-pool-ranking keys operational-certificate metadada public-stakepools metadata-proxy-servers

**ステークプールを作成するには**

自分のステークプールをセットアップする方法は、`ステークプールのセットアップ方法`の指示に従ってください。

..ステークプールのセットアップ方法: https://docs.cardano.org/projects/cardano-node/en/latest/getting-started/install.html

**推奨される設定**

ステークプールオペレーターは、コアノードとリレーノードの2種類のノードを使用します。各コアノードには、必ず1つ以上のリレーノードが付随します。

すなわち両ノードとも、まったく同じプログラム、cardano-nodeを実行します。両ノードの違いは、コアノードがブロック生成を担うのに対し、リレーノードはネットワークにおける他のリレーとの通信およびブロックの送信を担います。この違いは、設定方法、およびネットワークへの接続方法により決定されます。

* コアノードは複数の鍵ペア（コールドキー、KESホットキー、VRFホットキー）で設定され、ブロックを生成するための運営証明書を必要とします。対応するリレーノードにのみ接続されます。

* リレーノードは鍵を必要とせず、ブロックを生成することはできません。コアノード、他のリレーノード、外部ノードに接続されます。

各ノードは専用サーバーで実行し、コアノードサーバーのファイアウォールは対応するリレーノードからの受信接続のみ許可するように設定する必要があります。

.. image:: network1.png

**ノード間の接続を確立する**

ノードはCardanoネットワーク層で互いに接続します。この接続はトランザクションや新ブロックの生成といった情報交換に不可欠です。

Byronでは、連合型ノードがブロックの生成およびネットワークの接続に全責任を負っていました。Byronネットワークは連合型のコアノードのグループからなりました。これはブロックを生成し、Cardanoネットワークを維持する静的なノードです。Shelleyの立ち上げから、ネットワークはハイブリッドモードで実行され、IOGが運営する連合型ノードと、異なるステークプールオペレーター（SPO）間、およびSPOとIOGノード間の手動設定による接続が使用されています。Shelleyシステムの存続期間中に、継続的な自動検出およびピア選択を使用して、ネットワークは完全な分散型へと移行します。

初期段階では、ノードはトポロジーファイルで定義された静的設定を使用して他のノードと接続されます。リレーノードがオフラインとなり、ブロック生成ノードがアクセス不可能となる状況を避けるために、信頼できるリレーノードに接続することが重要です。現在、IOGは、SPOが接続を検討するための、`地域別に分類された全登録リレーのリスト`を提供しています。また、SPOには、別の20SPOをピアとして使用する設定を生成することが推奨されています。実際には、多くのSPOは20以上のピアを接続目的で使用することができます。このリストにより、近くと遠くのピアを選択して、地域間に強力な接続を確立することができます。

.. \_地域別に分類された全登録リレーのリスト: https://explorer.cardano-mainnet.iohk.io/relays/topology.json

ネットワークが連合型から完全な分散型へと移る前に、ノードのネットワーク層は継続的な自動検出およびピア選択へと切り替わります。これはネットワークスタックへのアップグレードにより達成されます。当初は、SPOリレー相互間の自動接続を向上させ、静的な手動設定の必要性を減らします。最終的にはCardanoノードの完全なP2Pトポロジーを可能にし、ネットワークのIOGが実行するリレーへの依存性を弱めます。

ノード間の通信、この機能を可能にするミニプロトコルなど、`Cardanoネットワーク`についての詳細はこのリンクを参照してください。

.. \_Cardanoネットワーク: https://docs.cardano.org/en/latest/explore-cardano/cardano-network.html
